// @todo: for each one a fromExec('node services/compiler/typescript.compiler.js') stream based command

// export const compileWatch = fromExec('node services/compiler/typescript.compiler.js', options);
// export const compileWatch2 = fromExecAsync('node services/compiler/typescript.compiler.js', options);
// export const compileWatch2 = fromExecAsync('node services/compiler/typescript.compiler.js', options);

export const commands = {
  // 'compile:watch': fromExecAsync('node services/compiler/typescript.compiler.js'),
  // 'compile:watch': fromExecAsync('node services/compiler/typescript.compiler.js'),
  // 'compile:watch': fromExecAsync('node services/compiler/typescript.compiler.js'),
  // 'compile:watch': fromExecAsync('node services/compiler/typescript.compiler.js'),
};
// "build:dev": "echo 'warning: 'build:dev' not implemented yet'",
// "build:prod": "echo 'warning: build:prod' not implemented yet'",
// "clean": "find ./packages -type f \\( -iname '*.js' -o -iname '*.d.ts' \\) -delete",
// "compile": "npm run clean && npm run compile:cjs:all && npm run compile:mjs:all && npm run compile:dec:all",
// "compile:cjs:all": "babel ./packages/node --out-dir ./packages/node -x .ts --out-file-extension .js --plugins @babel/plugin-transform-modules-commonjs --source-maps inline",
// "compile:cjs:single": "babel ${npm_config_src_file} --out-file ${npm_config_out_file} --plugins @babel/plugin-transform-modules-commonjs --source-maps inline",
// "compile:dec:all": "tsc ./packages/**/pkg-*/src/*.ts --emitDeclarationOnly --declaration --target ES5 --allowJs false",
// "compile:dec:single": "tsc ${npm_config_src_file} --emitDeclarationOnly --declaration --target ES5 --allowJs false",
// "compile:mjs:all": "babel ./packages/browser --out-dir ./packages/browser -x .ts --out-file-extension .js --source-maps inline",
// "compile:mjs:single": "babel ${npm_config_src_file} --out-file ${npm_config_out_file} --source-maps inline",
// "compile:services:all": "",
// "compile:services:single": "",
// "compile:watch": "npm run clean && node services/compiler/typescript.compiler.js",
// "eslint": "eslint ./ --ext .js,.ts --ignore-pattern '**/node_modules/**' --cache",
// "eslint:fix": "npm run eslint -- --fix",
// "lint": "npm run eslint && npm run tslint",
// "lint-staged": "lint-staged --no-stash",
// "lint:fix": "npm run eslint:fix && npm run tslint",
// "lint:watch": "npm run eslint:watch && npm run tslint -- -w",
// "ncu": "ncu",
// "ncu:update": "ncu -u",
// "prettier:write": "prettier --write ./ --config .prettierrc",
// "sort-pkg": "sort-package-json",
// "test": "npm run clean && npm run test:server:compile:watch",
// "test:all": "concurrently \"npm run test:node\" \"npm run test:browser\"",
// "test:all:headless": "concurrently \"npm run test:node\" \"npm run test:browser:headless\"",
// "test:all:headless:watch": "concurrently \"npm run test:node:watch\" \"npm run test:browser:headless:watch\"",
// "test:all:watch": "concurrently \"npm run test:node:watch\" \"npm run test:browser:watch\"",
// "test:browser": "karma start services/testing/jasmine.browser.test.server.js --auto-watch=false --single-run=true",
// "test:browser:coverage": "karma start services/testing/jasmine.browser.test.server.js --coverage",
// "test:browser:headless": "karma start services/testing/jasmine.browser.test.server.js --browsers ChromeHeadless,FirefoxHeadless --auto-watch=false --single-run=true",
// "test:browser:headless:watch": "karma start services/testing/jasmine.browser.test.server.js --browsers ChromeHeadless,FirefoxHeadless --auto-watch=true --single-run=false",
// "test:browser:watch": "karma start services/testing/jasmine.browser.test.server.js --auto-watch=true --single-run=false",
// "test:headless": "concurrently \"npm run test:node\" \"npm run test:browser:headless\"",
// "test:headless:watch": "concurrently \"npm run test:node:watch\" \"npm run test:browser:headless:watch\"",
// "test:node": "node services/testing/jasmine.node.test.server.js",
// "test:node:coverage": "echo 'test:node:coverage not implemented yet'",
// "test:node:watch": "nodemon --exec node services/testing/jasmine.node.test.server.js --extensions \".js\" --ignore node_modules",
// "test:node:watch:inspect": "nodemon --exec babel-node services/testing/jasmine.node.test.server.js --extensions \".js\" --ignore node_modules --inspect-brk",
// "test:server:compile:watch": "node services/testing/test.server.js",
// "tslint": "tsc --noEmit --allowJs --target ES5 --declaration false --declarationMap false"
